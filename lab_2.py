"""
Даний рядок s = "У лісі я зустрів 27 вовків, 4 з них були сірі, я схопив палицю, і він втік."
"""

# Task_1

"""
Визначити, чи у рядку зустрічається буква «я». Відобразити її позицію (індекс) у рядку. 
Визначте, скільки разів буква «у» зустрічається у рядку.
"""

provided_to_str = 'У лісі я зустрів 27 вовків, 4 з них були сірі, я схопив палицю, і він втік'

if 'я' in provided_to_str:
    index_ya = provided_to_str.index('я')
    print(f'Літера "я" в данному рядку має індекс: {index_ya}')
else:
    print('Літери "я" не має в данному рядку.')

print(f'Літера "у" у данному рядку зустрічається {provided_to_str.count("у")} рази')

# Task_2

"""
Визначити, чи складається рядок тільки з літер, якщо ні, то вивести рядок у верхньому регістрі. 
Визначити довжину рядка. ЯКЩО рядок довше 4 символів, то вивести рядок в нижньому регістрі.
"""

# Перевіряємо чи складається рядок тільки із літер задопомогою метода ".isalpha()"
if provided_to_str.isalpha():
    print('Рядок складається тіільки із літер')
else:
    print(provided_to_str.upper())

len_prov_str = len(provided_to_str)

# Якщо рядок довше 4-х сімволів, то виводимо його в нижньому регістрі
if len_prov_str > 4:
    print(provided_to_str.lower())

# Task_3

"""
Замініть перший символ у рядку «О». Відобразіть результат на екрані. 
Визначити, чи складається рядок лише з цифр, якщо ні, то вивести рядок у нижньому регістрі.
"""
# Змінюємо першу літеру рядка на літеру "О"
rep_fir_let = 'О' + provided_to_str[1:]

print('Це рядок ззаміненою першою літерою на літеру "О": ', rep_fir_let)

# Преревіряємо чи складається рядок лише із цифр за допомогою метода ".isdigit()"
if provided_to_str.isdigit():
    print('Наданий рядок складається лише із цифр.')
else:
     # Якщо ні то виводімо його у нижньому регістрі
    print(rep_fir_let.lower())

# Task_4

"""
Визначити, чи трапляється у рядку буква «ж». 
Визначити довжину рядка. Якщо рядок довше 8 символів, то виведіть рядок у зворотному порядку.
"""

if 'ж' in provided_to_str:
    print('Так, літера "ж" є в цьому рядку.')
else:
    print('Літери "ж" в наданому рядку не має.')
# Перевіряємо чи є данний рядок довшим чім 8-м символів
if len_prov_str > 8:
    # Якщо так, виводимо у зворотньому напрямку
    print(f'Рядок довше 8-ми символів, тому тепер він має такий вигляд: ', provided_to_str[::-1])
else:
    print('Рядок є меншим 8-ми символів тому лишається незмінним: ', provided_to_str)


# Task_5

"""
 Визначити кількість літер та цифр у рядку.
"""
# Створюємо лічильники для літер та цифр
count_letters = 0
count_digits = 0

# Перевіряємо символи у рядку
for i in provided_to_str:
     # Якщо літера то додаємо у лічильник літер
    if i.isalpha():
        count_letters += 1
    # Якщо цифра то додаємо у лічильник цифр
    elif i.isdigit():
        count_digits += 1

print(f'Рядок складається з:', count_letters, 'літер')
print(f'Та', count_digits, 'цифр')

# Task_6

"""
Перенести першу половину рядка у протилежний регістр і вивести у зворотному порядку.
"""

# Знаходимо середину рядка
middl_provided_str = len(provided_to_str) // 2

# Розділяємо на першу та другу половину
first_half_str = provided_to_str[:middl_provided_str]
second_half_str = provided_to_str[middl_provided_str:]

# Переводімо у протилежний регістр "метод .swapcase()" та виводимо у зворотньому порядку
chen_first_half = first_half_str.swapcase()[::-1]

print('Перетворена половина рядка виглядає так:', chen_first_half)

# Task_7

"""
Замініть останній символ у рядку на "P". Відобразіть результат на екрані. 
Визначте, скільки разів літера "о" зустрічається в рядку.
"""

# Змінюємо останній символ на "P"
modif_str = provided_to_str[:-1] + "P"

print("Рядок після заміни останнього символу на 'P':", modif_str)

# Підраховуємо скільки разів літера "о" зустрічається у рядку
count_o_str = provided_to_str.count('о')
print(f'Літера "о" зустрічається у рядку {count_o_str} разів.')

# Task_8

"""
Визначити, чи містить рядок підрядок "вті". Відобразити його позицію (індекс) у рядку. 
Визначити довжину рядка. ЯКЩО рядок довше 16 символів, то скоротbnm рядок до 16 символів.
"""

# Перевіряємо чи містить рядо, підрядок "вті"
if 'вті' in provided_to_str:
    # виводимо його індекс методом .find()
    index_vti = provided_to_str.find('вті')
    print(f'Підрядок "вті" знаходиться за індексом: {index_vti}')

len_prov_str = len(provided_to_str)

# Скорочуємо довжину до 16-ти символів за умови якщо він її перевищує
if len_prov_str > 16:
    provided_to_str = provided_to_str[:16]
    print('Рядок скорочено до 16-ти символів:', provided_to_str)

# Task_9

"""
Створіть новий рядок за таким правилом: замість кожної цифри вставте символ 
на відповідне місце у вихідному рядку (тобто замість цифри 5 повинен стояти 5-й символ рядка)
"""

# Рядок без пробілів щоб краще було видно результат
changed_str = "Улісіязустрів 27 вовків, 4 з них були сірі, я схопив палицю, і він втік."

# Створюємо новий рядк за вказаними вимогами
new_string = ''
for char in changed_str:
    if char.isdigit():
        # Якщо символ є цифрою, беремо символ на відповідному місці та замінюємо у вихідному рядку
        digit_index = int(char)
        if digit_index <= len(changed_str):
            new_string += changed_str[digit_index - 1]
    else:
        # Якщо символ не є цифрою, залишаємо його без змін
        new_string += char

# Виведення результату на екран
print("Новий рядок:", new_string)



# Task_10

"""
Перенести другу половину рядка у протилежний регістр і вивести у зворотному порядку.
"""

provided_to_str = 'У лісі я зустрів 27 вовків, 4 з них були сірі, я схопив палицю, і він втік'

# Знаходимо середину рядка
middl_provided_str = len(provided_to_str) // 2

# Розділяємо на першу та другу половину
first_half_str = provided_to_str[:middl_provided_str]
second_half_str = provided_to_str[middl_provided_str:]

# Переводімо у протилежний регістр "метод .swapcase()" та виводимо у зворотньому порядку
chen_second_half_str = second_half_str.swapcase()[::-1]

print(first_half_str)
print(second_half_str)

print('Перетворена половина рядка виглядає так:', chen_second_half_str)

# Task_11

"""
Розділіть рядок на три частини. 
Виведіть останню третину великими літерами, потім першу третину малими літерами, потім другу третину без змін.
"""
# Визначаємо довжину рядка та ділемо на три чвастини
len_prov_st = len(provided_to_str)
third_str = len_prov_st // 3

# Ділемо рядок на три частини
first_part = provided_to_str[:third_str] # перша частина
second_pard = provided_to_str[third_str:2 * third_str] # друга частина
third_part = provided_to_str[2 * third_str:] # третя частина

# Змінюємо регістр частин рядка
modif_str = third_part.upper() + first_part.lower() + second_pard

print('Результат перетворення:', modif_str)
print(third_part.upper())
print(first_part.lower())
print(second_pard)

# Task_12

"""
Створіть новий рядок за таким правилом: замість кожної цифри вставьте символ у відповідному місці вихідного рядка, 
рахуючи з кінця рядка (тобто замість цифри 5 повинен стояти 5-й символ рядка, рахуючи з кінця).
"""

n_str = ''
for chars in provided_to_str:
    if chars.isdigit():
        di_index = int(chars)
        if di_index <= len(provided_to_str):
            n_str += provided_to_str[-di_index]
    else:
        n_str += chars

print('Змінений рядок виглядає так:', n_str)

# Task_13

"""
Порахуйте кількість прогалин і ком в заданому рядку.
"""

count_spaces = provided_to_str.count(' ')
count_com = provided_to_str.count(',')

print(f'Кількість прогалин у рядку: {count_spaces}')
print(f'Кількість ком у рядку: {count_com}')

# Task_14

"""
Замініть коми у вихідному рядку на фрагменти тексту, введені з клавіатури.
"""

prov_str_com = 'У лісі я зустрів 27 вовків, 4 з них були сірі, я схопив палицю, і він втік'

# Проходимо по тексту і якщо є кома, замінюємо на текст та поміщаємо у тимчасовий список
replace_texts = []
while True:
    replace_text = input('Введіть текст ля заміни коми та "Enter" для завершення: ')
    if replace_text == '':
     break
    replace_texts.append(replace_text)

# Замінюємо коми на текс
for replace_text in replace_texts:
    prov_str_com = prov_str_com.replace(',', replace_text)

print('Ось що вийшло: ', prov_str_com)





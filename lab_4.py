# Task_1

"""
Напишіть код, який описує ситуацію: є п’ять учнів, які написали погано контрольну роботу,
але наступного разу ці учні виправили ці оцінки на відмінно, крім останнього, він вибув з цієї школи.
"""

# Словник оцінок
grades = {
    'student1': 'bad',
    'student2': 'bad',
    'student3': 'bad',
    'student4': 'bad',
    'student5': 'bad'
}

# Учні які виправили свої оцінки
for students in grades:
    grades[students] = 'excellent'

# Вибувший учень
dropped_student = 'student5'
del grades[dropped_student]

print(f'Учень {dropped_student} вибув \nОцінкі після виправлення:', grades)


# Task_2

"""
Знайдіть усі значення функції y(x) = x2 + 3 на інтервалі від 10 до 30 з кроком 2
"""

# Обчислюєму та виводимо значення функції на заданому інтервалі
for x in range(10, 31, 2):
    y = x**2 + 3
    print(f'При x = {x}, y = {y}')

# Task_3

"""
Задано рядок з вірша: «Мій дядько найчесніших правил, Коли не жартома занедужав, 
Він поважати себе змусив І краще вигадати не міг» Видаліть з рядка всі слова, що починаються на букву «м». 
Результат вивести на екран у вигляді рядка.
"""

poem = "Мій дядько найчесніших правил, \nКоли не жартома занедужав, \nВін поважати себе змусив \nІ краще вигадати не міг"
print(poem)

# розбиваємо рядок на список слів
words = poem.split()
# Створюємо список
res_words = []
# Шукаємо слова які починаються на літеру "м" за допомогою функції .startswith() який перевіряє чи починається рядок, слово з заданого параметру
for word in words:
    if not word.startswith('М'):
        if not word.startswith('м'):
         res_words.append(word)   # якщо слово не починається на "м", додаємо до списка

# збираємо слова
chan_poem = ' '.join(res_words)
print(chan_poem)

# Task_4

"""
L = [-8, 8, 6.0, 5, 'рядок', -3.1] Визначити суму чисел, що входять до списку L.
"""

L = [-8, 8, 6.0, 5, 'рядок', -3.1]
# створюємо змінну для збереження суми чисел
sum_num = 0

for elem in L:
    # перевіряємо чи є елемент числом за допомогою функції .isinstance(object, type)
    if isinstance(elem, (int, float)):
        sum_num += elem # додаємо числа до суми

print('Сума чисел у списку L дорівнює:', sum_num)

# Task_5

"""
Наведено число, введене з клавіатури. Визначте суму квадратів непарних цифр у числі
"""

num_input = input('Введіть число:')
# Створюємо змінну для суми кватратів
sum_squares = 0

for digit in num_input:   # Пороходимось по цифрам числа
    if int(digit) % 2 != 0:   # Перевіряємо цифри на парність
        sum_squares += int(digit) ** 2  # Якщо цифра не парна додаємо її квадрат до суми

print('Сума квадратів непарних цифр:', sum_squares)

# Task_6

"""
Дано довільний текст. Надрукуйте всі літери, що є в ньому, визначте їх кількість.
"""

text = 'Дано довільний текст. Надрукуйте всі літери, що є в ньому, визначте їх кількість.'

# Створюємо множину для літер тексту
letters = {}
# Проходимось по тексту і якщо символ є літерою(методом .isalpha()), додаємо її до словника
for char in text:
    if char.isalpha():
        letters.setdefault(char, 0)
        letters[char] += 1

print(f'У тексті {sum(letters.values())} літер')


# Task_7

"""
Знайдіть усі значення функції y(x) = 5x2 + 3 на інтервалі від 10 до 300 з кроком 5.
"""
for x in range(10, 301, 5):
    y = 5 * x**2 + 3
    print(f'При х = {x}, y = {y}')


# Task_8
"""
Дано довільний текст. Визначити кількість прогалин у тексті.
"""

text_space = 'Дано довільний текст. Визначити кількість прогалин у тексті.'

# рахуєму кількість прогалин
space_count = text_space.count(' ')

print(f'У тексті {space_count} прогалин')

# Task_9

"""
Обчислити факторіал для введеного з клавіатури числа.
"""

num_f = int(input('Введіть число: '))

if num_f == 0:
    print('Факторіал 0! = 0')
else:
    factorial = 1
    for i in range(1, num_f + 1):  # обчислюємо факторіал
        factorial *= i

    print(f'Факторіал {num_f} = {factorial}')



# Task_10

"""
Даний список, кожен елемент якого також є списком. Порахувати кількість всіх елементів у вкладених списках
"""

mix_list = [[1, 2, 3], ['a', 'b', 'c'], ['Alex', 'Sam', 'John']]

# Зберігаємо елементи
sum_elements = 0

# Перебераємо вкладені списки
for sublist in mix_list:
    sum_elements += len(sublist)

print('Кількість елементів у вкладених списках =', sum_elements)














